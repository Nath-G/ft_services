http {
	sendfile on;
	server {
		listen 80 default_server;
		#return 301 https://localhost$request_uri;
		listen 443 default_server ssl;

		#server_name theSiteIwant;

		ssl_certificate /etc/ssl/certs/localhost.crt;
		#ssl_certificate /etc/ssl/certs/theSiteIwant.pem;
		ssl_certificate_key /etc/ssl/certs/localhost.key;
		#ssl_certificate_key /etc/ssl/certs/theSiteIwant.key;

		root /var/www/localhost/htdocs;
		index index.html index.php index.htm index.nginx-debian.html;

		location / {
			autoindex on;
			try_files $uri $uri/ =404;
		}
 		# if ($scheme != "https") {
  		# 	return 301 https://$host$uri;
 		# }
	}
	# Force HTTPS connection if http
}

events {

}
##2eme version
## le serveur http sur le port 80
# server {
#       listen      1.2.3.4:80 default;
#       server_name theSiteIwant.com www.theSiteIwant.com;
#       ## Redirige le HTTP vers le HTTPS ##
#       return 301 https://localhost$request_uri;
# }

# ## Le serveur https sur le port 443. N'oubliez pas vote config SSL###
# server {
#       access_log  logs/theSiteIwant.com/ssl_access.log main;
#       error_log   logs/theSiteIwant.com/ssl_error.log;
#       index       index.html;
#       root         /var/www/localhost/htdocs #/usr/local/nginx/html;
      
#       ## DÃ©but de la config SSL ##
#       listen      1.2.3.4:443 ssl;
#       server_name theSiteIwant.com www.theSiteIwant.com;
#       fastcgi_param HTTPS on;

#      ## Redirection de l url avec www vers une url sans www
#       if ($host = 'www.theSiteIwant.com' ) {
#          rewrite  ^/(.*)$  https://theSiteIwant.com/$1  permanent;
#       }

#     ### config SSL - A vous de jouer ###
#      ssl_certificate   /etc/ssl/certs/localhost.crt;   ssl/example.com/example.com_combined.crt;
#      ssl_certificate_key /etc/ssl/certs/localhost.key; ssl/example.com/example.com.key_without_password;
#      ssl_protocols        SSLv3 TLSv1 TLSv1.1 TLSv1.2;
#      ssl_ciphers RC4:HIGH:!aNULL:!MD5;
#      ssl_prefer_server_ciphers on;
#      keepalive_timeout    70;
#      ssl_session_cache    shared:SSL:10m;
#      ssl_session_timeout  10m;

#     ## PROXY
#       location / {
#         # add_header           Front-End-Https    on;
#         # add_header  Cache-Control "public, must-revalidate";
#         # add_header Strict-Transport-Security "max-age=2592000; includeSubdomains";
#         # proxy_pass  http://exampleproxy;
#         # proxy_next_upstream error timeout invalid_header http_500 http_502 http_503;
#         # proxy_set_header        Host            $host;
#         # proxy_set_header        X-Real-IP       $remote_addr;
#         # proxy_set_header        X-Forwarded-For $proxy_add_x_forwarded_for;
#       }
# }