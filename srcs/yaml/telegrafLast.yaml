apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: telegraf-pv-claim
  labels:
    # app: mysql-app
    app: telegraf
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 1Gi
---
# apiVersion: v1
# kind: Secret
# metadata:
#   name: telegraf-secrets
# type: Opaque
# stringData:
#   INFLUXDB_DB: grafana #old influxdb
#   INFLUXDB_URL: http://influxdb:8086
#   INFLUXDB_USER: telegraf_user
#   INFLUXDB_USER_PASSWORD: telegraf_password
# ---
# apiVersion: v1
# kind: ConfigMap
# metadata:
#   name: telegraf-config
# data:
#   telegraf.conf: |+
#     # Configuration for telegraf agent
#     [agent]
#     ## Default data collection interval for all inputs
#       interval = "1s"
#       ## Rounds collection interval to 'interval'
#       ## ie, if interval="10s" then always collect on :00, :10, :20, etc.
#       round_interval = true
#     ###############################################################################
#     #                            OUTPUT PLUGINS                                   #
#     ###############################################################################
#     # Configuration for sending metrics to InfluxDB
#     [[outputs.influxdb]]
#       urls = ["http://influxdb:8086"]
#       database = "influxdb"
#     ###############################################################################
#     #                            INPUT PLUGINS                                    #
#     ###############################################################################
#     # Read metrics about cpu usage
#     [[inputs.kube_inventory]]
#     ## URL for the Kubernetes API
#       url = "https://kubernetes"
#       namespace = ""
#       bearer_token = "/run/secrets/kubernetes.io/serviceaccount/token"
#       resource_include = ["pods"]
#       insecure_skip_verify = true
#     # Read metrics about cpu usage
#     [[inputs.cpu]]
#       ## Whether to report per-cpu stats or not
#       percpu = true
#       ## Whether to report total system cpu stats or not
#       totalcpu = true
#       ## If true, collect raw CPU time metrics.
#       collect_cpu_time = false
#       ## If true, compute and report the sum of all non-idle CPU states.
#       report_active = false
# ---
kind: Service
apiVersion: v1
metadata:
  name: telegraf
  labels:
    app: telegraf
spec:
  ports:
  - port: 8125
    name: http
    targetPort: 8125
  selector:
    app: telegraf
  # clusterIP: None
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: telegraf
  labels:
    app: telegraf
spec:
  strategy:
    type: Recreate
  selector:
    matchLabels:
      app: telegraf
  template:
    metadata:
      labels:
        app: telegraf
    spec:
      serviceAccountName: telegraf-account
      containers:
      - name: telegraf
        image:  telegraf-image
        imagePullPolicy: Never
        volumeMounts:
        - name: telegraf-endpoint
          mountPath: "/var/run/docker.sock"
        - name: telegraf-persistent-storage
          mountPath: /var/lib/telegraf
        # - mountPath: /etc/telegraf.conf #/etc/telegraf/telegraf.conf
        #   name: telegraf-config
        #   subPath: telegraf.conf
        #   readOnly: true
        # envFrom:
        #   - secretRef:
        #       name: telegraf-secrets
      volumes:
      - name: telegraf-endpoint
        hostPath:
          path: /var/run/docker.sock
      - name: telegraf-persistent-storage
        persistentVolumeClaim:
          claimName: telegraf-pv-claim
      # - name: telegraf-config
      #   configMap:
      #     name: telegraf-config
---
# kind: ClusterRole
# apiVersion: rbac.authorization.k8s.io/v1
# metadata:
#   name: influx:cluster:viewer
#   labels:
#     rbac.authorization.k8s.io/aggregate-view-telegraf: "true"
# rules:
#   - apiGroups: [""]
#     resources:
#     - persistentvolumes
#     - nodes
#     - endpoints
#     - deployments
#     - services
#     - pods
#     - statefulsets
#     - daemonsets
#     - persistentvolumeclaims
#     - ingresses
#     - metallb
#     verbs: ["get", "list"]
---
# kind: ClusterRole
# apiVersion: rbac.authorization.k8s.io/v1
# metadata:
#   name: influx:telegraf
# aggregationRule:
#   clusterRoleSelectors:
#     - matchLabels:
#         rbac.authorization.k8s.io/aggregate-view-telegraf: "true"
#     - matchLabels:
#         rbac.authorization.k8s.io/aggregate-to-view: "true"
# rules: [] # Rules are automatically filled in by the controller manager.
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: telegraf-account
  labels:
    app: telegraf
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  # name: influx:telegraf:viewer
  name: role-telegraf
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: cluster-admin
subjects:
  - kind: ServiceAccount
    name: telegraf-account
    namespace: default
